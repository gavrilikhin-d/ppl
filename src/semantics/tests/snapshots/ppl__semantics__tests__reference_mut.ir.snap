---
source: src/semantics/tests/mod.rs
expression: ir
---
; ModuleID = 'reference_mut'
source_filename = "reference_mut.ppl"

%Integer = type { ptr }
%String = type { ptr }

@x = global %Integer zeroinitializer
@y = global ptr null

define void @initialize() !dbg !3 {
  %1 = call %Integer @integer_from_i64(i64 1), !dbg !7
  store %Integer %1, ptr @x, align 8, !dbg !7
  br label %return, !dbg !7

return:                                           ; preds = %0
  ret void
}

declare %Integer @integer_from_i64(i64)

define void @initialize.1() !dbg !8 {
  %1 = call ptr @"reference to mutable <:ReferenceMut<Integer>>"(ptr @x), !dbg !9
  store ptr %1, ptr @y, align 8, !dbg !9
  br label %return, !dbg !9

return:                                           ; preds = %0
  ret void
}

define ptr @"reference to mutable <:ReferenceMut<Integer>>"(ptr %0) !dbg !10 {
  %return_value = alloca ptr, align 8
  %ref = alloca ptr, align 8
  store ptr %0, ptr %ref, align 8
  %2 = load ptr, ptr %ref, align 8, !dbg !11
  store ptr %2, ptr %return_value, align 8, !dbg !11
  br label %return, !dbg !11

return:                                           ; preds = %1
  %3 = load ptr, ptr %return_value, align 8
  ret ptr %3
}

define void @reference_mut.execute() !dbg !12 {
init_globals:
  call void @initialize(), !dbg !13
  call void @initialize.1(), !dbg !14
  br label %0, !dbg !14

0:                                                ; preds = %init_globals
  %1 = load ptr, ptr @y, align 8, !dbg !15
  %2 = load %Integer, ptr %1, align 8, !dbg !15
  call void @"println <:Integer>"(%Integer %2), !dbg !15
  %3 = load ptr, ptr @y, align 8, !dbg !16
  %4 = call %Integer @integer_from_i64(i64 2), !dbg !17
  store %Integer %4, ptr %3, align 8, !dbg !17
  %5 = load ptr, ptr @y, align 8, !dbg !18
  %6 = load %Integer, ptr %5, align 8, !dbg !18
  call void @"println <:Integer>"(%Integer %6), !dbg !18
  %7 = load %Integer, ptr @x, align 8, !dbg !19
  %8 = call %Integer @clone_integer(%Integer %7), !dbg !19
  call void @"println <:Integer>"(%Integer %8), !dbg !19
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

define void @"println <:Integer>"(%Integer %0) !dbg !20 {
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  %2 = load %Integer, ptr %x, align 8, !dbg !21
  %3 = call %String @integer_as_string(%Integer %2), !dbg !21
  call void @"println <:String>"(%String %3), !dbg !21
  br label %return, !dbg !21

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @integer_as_string(%Integer)

declare %Integer @clone_integer(%Integer)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "reference_mut.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 0, column: 12, scope: !3)
!8 = distinct !DISubprogram(name: "initialize.1", linkageName: "initialize.1", scope: !2, file: !2, line: 1, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!9 = !DILocation(line: 1, column: 29, scope: !8)
!10 = distinct !DISubprogram(name: "reference to mutable <:ReferenceMut<Integer>>", linkageName: "reference to mutable <:ReferenceMut<Integer>>", scope: !8, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!11 = !DILocation(line: 6, scope: !10)
!12 = distinct !DISubprogram(name: "reference_mut.execute", linkageName: "reference_mut.execute", scope: !2, file: !2, line: 2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!13 = !DILocation(line: 0, column: 12, scope: !12)
!14 = !DILocation(line: 1, column: 8, scope: !12)
!15 = !DILocation(line: 2, column: 8, scope: !12)
!16 = !DILocation(line: 3, scope: !12)
!17 = !DILocation(line: 3, column: 4, scope: !12)
!18 = !DILocation(line: 4, column: 8, scope: !12)
!19 = !DILocation(line: 5, column: 8, scope: !12)
!20 = distinct !DISubprogram(name: "println <:Integer>", linkageName: "println <:Integer>", scope: !12, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!21 = !DILocation(line: 6, scope: !20)
