---
source: src/semantics/tests/mod.rs
expression: ir
---
; ModuleID = 'deref_member_ref'
source_filename = "deref_member_ref.ppl"

%Integer = type { ptr }
%Point = type { %Integer, %Integer }
%String = type { ptr }

define %Integer @"x of <:Reference<Point>>"(ptr %0) !dbg !3 {
  %return_value = alloca %Integer, align 8
  %p = alloca ptr, align 8
  store ptr %0, ptr %p, align 8
  %2 = load ptr, ptr %p, align 8, !dbg !7
  %x = getelementptr inbounds %Point, ptr %2, i32 0, i32 0, !dbg !7
  %3 = load %Integer, ptr %x, align 8, !dbg !7
  store %Integer %3, ptr %return_value, align 8, !dbg !7
  br label %return, !dbg !7

return:                                           ; preds = %1
  %4 = load %Integer, ptr %return_value, align 8
  ret %Integer %4
}

define void @deref_member_ref.execute() !dbg !8 {
  %1 = alloca %Point, align 8, !dbg !9
  %Point.x = getelementptr inbounds %Point, ptr %1, i32 0, i32 0, !dbg !9
  %2 = call %Integer @integer_from_i64(i64 1), !dbg !10
  store %Integer %2, ptr %Point.x, align 8, !dbg !10
  %Point.y = getelementptr inbounds %Point, ptr %1, i32 0, i32 1, !dbg !10
  %3 = call %Integer @integer_from_i64(i64 2), !dbg !11
  store %Integer %3, ptr %Point.y, align 8, !dbg !11
  %4 = call %Integer @"x of <:Reference<Point>>"(ptr %1), !dbg !11
  call void @"println <:Integer>"(%Integer %4), !dbg !11
  br label %return, !dbg !11

return:                                           ; preds = %0
  ret void
}

define void @"println <:Integer>"(%Integer %0) !dbg !12 {
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  %2 = load %Integer, ptr %x, align 8, !dbg !13
  %3 = call %String @integer_as_string(%Integer %2), !dbg !13
  call void @"println <:String>"(%String %3), !dbg !13
  br label %return, !dbg !13

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @integer_as_string(%Integer)

declare %Integer @integer_from_i64(i64)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "deref_member_ref.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "x of <:Reference<Point>>", linkageName: "x of <:Reference<Point>>", scope: !2, file: !2, line: 3, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 3, column: 33, scope: !3)
!8 = distinct !DISubprogram(name: "deref_member_ref.execute", linkageName: "deref_member_ref.execute", scope: !2, file: !2, line: 5, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!9 = !DILocation(line: 5, column: 14, scope: !8)
!10 = !DILocation(line: 5, column: 25, scope: !8)
!11 = !DILocation(line: 5, column: 31, scope: !8)
!12 = distinct !DISubprogram(name: "println <:Integer>", linkageName: "println <:Integer>", scope: !8, file: !2, line: 5, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!13 = !DILocation(line: 5, column: 34, scope: !12)
