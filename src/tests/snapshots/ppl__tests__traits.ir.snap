---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%Integer = type { ptr }
%String = type { ptr }

@res = global %Integer zeroinitializer

define void @main.execute() !dbg !3 {
  call void @initialize(), !dbg !7
  %1 = call %Integer @clone_integer(ptr @res), !dbg !8
  call void @"println <:Integer>"(%Integer %1), !dbg !8
  call void @destroy_integer(ptr @res), !dbg !9
  br label %return, !dbg !9

return:                                           ; preds = %0
  ret void
}

define void @"required <:Integer>"(%Integer %0) !dbg !10 {
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  call void @destroy_integer(ptr %x), !dbg !11
  br label %return, !dbg !12

return:                                           ; preds = %1
  ret void
}

declare void @destroy_integer(ptr)

define private void @initialize() !dbg !13 {
  %1 = call %Integer @integer_from_i64(i64 1), !dbg !14
  %2 = call %Integer @"default <:Integer>"(%Integer %1), !dbg !14
  store %Integer %2, ptr @res, align 8, !dbg !14
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

define private %Integer @"default <:Integer>"(%Integer %0) !dbg !15 {
  %return_value = alloca %Integer, align 8
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  %2 = load %Integer, ptr %x, align 8, !dbg !16
  store %Integer %2, ptr %return_value, align 8, !dbg !16
  br label %return, !dbg !16

return:                                           ; preds = %1
  %3 = load %Integer, ptr %return_value, align 8
  ret %Integer %3
}

declare %Integer @integer_from_i64(i64)

define private void @"println <:Integer>"(%Integer %0) !dbg !17 {
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  %2 = load %Integer, ptr %x, align 8, !dbg !18
  %3 = call %String @integer_as_string(%Integer %2), !dbg !18
  call void @"println <:String>"(%String %3), !dbg !18
  br label %return, !dbg !18

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @integer_as_string(%Integer)

declare %Integer @clone_integer(ptr)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 9, column: 10, scope: !3)
!8 = !DILocation(line: 10, column: 8, scope: !3)
!9 = !DILocation(line: 9, scope: !3)
!10 = distinct !DISubprogram(name: "required <:Integer>", linkageName: "required <:Integer>", scope: !3, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!11 = !DILocation(line: 6, column: 12, scope: !10)
!12 = !DILocation(line: 6, column: 28, scope: !10)
!13 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !3, file: !2, line: 9, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!14 = !DILocation(line: 9, column: 18, scope: !13)
!15 = distinct !DISubprogram(name: "default <:Integer>", linkageName: "default <:Integer>", scope: !13, file: !2, line: 3, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!16 = !DILocation(line: 3, column: 25, scope: !15)
!17 = distinct !DISubprogram(name: "println <:Integer>", linkageName: "println <:Integer>", scope: !3, file: !2, line: 10, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!18 = !DILocation(line: 10, column: 11, scope: !17)
