---
source: src/tests/mod.rs
expression: hir
---
let ty: Type<Integer> = `type of <:Integer>`(1)
`println <:Type<Integer>>`((ty:Type<Integer>))

==MONOMORPHIZED==


fn<Integer> type of <$arg0: Integer> -> Type<Integer>:
	let $tmp@4337: Type<Integer> = (Type<Integer>:Type<Integer>)
	return ($tmp@4337:Type<Integer>)


fn<Integer> String from <ty: Type<Integer>> -> String:
	let $tmp@4212: String = `clone <:Reference<String>>`((ty:Type<Integer>).name)
	return ($tmp@4212:String)


fn println <x: Type<Integer>> -> None:
	let $tmp@176: None = `println <:String>`(`String from <:Type<Integer>>`((x:Type<Integer>)))
	return ($tmp@176:None)
