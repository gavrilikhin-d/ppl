---
source: src/tests/mod.rs
expression: hir
---
fn call predeclared -> None:
	`predeclared <:Integer>`(1)


fn<T> predeclared <x: T> -> None:
	let $tmp@72: String = "called predeclared"
	`println <:Reference<String>>`((&$tmp@72:Reference<String>))
	`destroy <:ReferenceMut<String>>`(($tmp@72:String))

`call predeclared`()

==MONOMORPHIZED==


fn<Integer> predeclared <x: Integer> -> None:
	let $tmp@72: String = "called predeclared"
	`println <:Reference<String>>`((&$tmp@72:Reference<String>))
