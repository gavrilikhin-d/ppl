---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%"Type<String>" = type { %String, %Integer }
%String = type { ptr }
%Integer = type { ptr }
%Rational = type { ptr }

@"Type<String>" = private global %"Type<String>" zeroinitializer
@0 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@4 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@8 = private unnamed_addr constant [4 x i8] c"5/2\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"9\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@12 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@13 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@14 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@15 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@16 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@17 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@18 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@20 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@21 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@22 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@23 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@24 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@25 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@26 = private unnamed_addr constant [2 x i8] c"0\00", align 1

define private void @initialize() !dbg !3 {
  %1 = alloca %"Type<String>", align 8, !dbg !7
  %"Type<String>.name" = getelementptr inbounds %"Type<String>", ptr %1, i32 0, i32 0, !dbg !7
  %2 = call %String @string_from_c_string_and_length(ptr @0, i64 6), !dbg !8
  store %String %2, ptr %"Type<String>.name", align 8, !dbg !8
  %"Type<String>.size" = getelementptr inbounds %"Type<String>", ptr %1, i32 0, i32 1, !dbg !8
  %3 = call %Integer @integer_from_i64(i64 8), !dbg !8
  store %Integer %3, ptr %"Type<String>.size", align 8, !dbg !8
  %4 = load %"Type<String>", ptr %1, align 8, !dbg !8
  store %"Type<String>" %4, ptr @"Type<String>", align 8, !dbg !8
  br label %return, !dbg !8

return:                                           ; preds = %0
  ret void
}

declare %String @string_from_c_string_and_length(ptr, i64)

declare %Integer @integer_from_i64(i64)

define void @main.execute() !dbg !9 {
init_globals:
  call void @initialize(), !dbg !10
  br label %0, !dbg !10

0:                                                ; preds = %init_globals
  %1 = call %Rational @rational_from_c_string(ptr @1), !dbg !11
  %"$tmp0@8" = alloca %Rational, align 8, !dbg !11
  store %Rational %1, ptr %"$tmp0@8", align 8, !dbg !11
  %2 = load %Rational, ptr %"$tmp0@8", align 8, !dbg !11
  call void @"println <:Rational>"(%Rational %2), !dbg !11
  %3 = call %Rational @rational_from_c_string(ptr @2), !dbg !12
  %"$tmp0@21" = alloca %Rational, align 8, !dbg !12
  store %Rational %3, ptr %"$tmp0@21", align 8, !dbg !12
  %4 = load %Rational, ptr %"$tmp0@21", align 8, !dbg !12
  %5 = call %Rational @"+ <:Rational>"(%Rational %4), !dbg !12
  %"$tmp1@20" = alloca %Rational, align 8, !dbg !12
  store %Rational %5, ptr %"$tmp1@20", align 8, !dbg !12
  %6 = load %Rational, ptr %"$tmp1@20", align 8, !dbg !13
  call void @"println <:Rational>"(%Rational %6), !dbg !13
  %7 = call %Rational @rational_from_c_string(ptr @3), !dbg !14
  %"$tmp0@34" = alloca %Rational, align 8, !dbg !14
  store %Rational %7, ptr %"$tmp0@34", align 8, !dbg !14
  %8 = load %Rational, ptr %"$tmp0@34", align 8, !dbg !14
  %9 = call %Rational @minus_rational(%Rational %8), !dbg !14
  %"$tmp1@33" = alloca %Rational, align 8, !dbg !14
  store %Rational %9, ptr %"$tmp1@33", align 8, !dbg !14
  %10 = load %Rational, ptr %"$tmp1@33", align 8, !dbg !15
  call void @"println <:Rational>"(%Rational %10), !dbg !15
  %11 = call %Rational @rational_from_c_string(ptr @4), !dbg !16
  %"$tmp0@46" = alloca %Rational, align 8, !dbg !16
  store %Rational %11, ptr %"$tmp0@46", align 8, !dbg !16
  %12 = call %Rational @rational_from_c_string(ptr @5), !dbg !17
  %"$tmp1@52" = alloca %Rational, align 8, !dbg !17
  store %Rational %12, ptr %"$tmp1@52", align 8, !dbg !17
  %13 = load %Rational, ptr %"$tmp0@46", align 8, !dbg !16
  %14 = load %Rational, ptr %"$tmp1@52", align 8, !dbg !17
  %15 = call %Rational @rational_plus_rational(%Rational %13, %Rational %14), !dbg !17
  %"$tmp2@46" = alloca %Rational, align 8, !dbg !17
  store %Rational %15, ptr %"$tmp2@46", align 8, !dbg !17
  %16 = load %Rational, ptr %"$tmp2@46", align 8, !dbg !16
  call void @"println <:Rational>"(%Rational %16), !dbg !16
  %17 = call %Rational @rational_from_c_string(ptr @6), !dbg !18
  %"$tmp0@64" = alloca %Rational, align 8, !dbg !18
  store %Rational %17, ptr %"$tmp0@64", align 8, !dbg !18
  %18 = call %Rational @rational_from_c_string(ptr @7), !dbg !19
  %"$tmp1@70" = alloca %Rational, align 8, !dbg !19
  store %Rational %18, ptr %"$tmp1@70", align 8, !dbg !19
  %19 = load %Rational, ptr %"$tmp0@64", align 8, !dbg !18
  %20 = load %Rational, ptr %"$tmp1@70", align 8, !dbg !19
  %21 = call %Rational @"<:Rational> - <:Rational>"(%Rational %19, %Rational %20), !dbg !19
  %"$tmp2@64" = alloca %Rational, align 8, !dbg !19
  store %Rational %21, ptr %"$tmp2@64", align 8, !dbg !19
  %22 = load %Rational, ptr %"$tmp2@64", align 8, !dbg !18
  call void @"println <:Rational>"(%Rational %22), !dbg !18
  %23 = call %Rational @rational_from_c_string(ptr @8), !dbg !20
  %"$tmp0@82" = alloca %Rational, align 8, !dbg !20
  store %Rational %23, ptr %"$tmp0@82", align 8, !dbg !20
  %24 = call %Rational @rational_from_c_string(ptr @9), !dbg !21
  %"$tmp1@88" = alloca %Rational, align 8, !dbg !21
  store %Rational %24, ptr %"$tmp1@88", align 8, !dbg !21
  %25 = load %Rational, ptr %"$tmp0@82", align 8, !dbg !20
  %26 = load %Rational, ptr %"$tmp1@88", align 8, !dbg !21
  %27 = call %Rational @rational_star_rational(%Rational %25, %Rational %26), !dbg !21
  %"$tmp2@82" = alloca %Rational, align 8, !dbg !21
  store %Rational %27, ptr %"$tmp2@82", align 8, !dbg !21
  %28 = load %Rational, ptr %"$tmp2@82", align 8, !dbg !20
  call void @"println <:Rational>"(%Rational %28), !dbg !20
  %29 = call %Rational @rational_from_c_string(ptr @10), !dbg !22
  %"$tmp0@100" = alloca %Rational, align 8, !dbg !22
  store %Rational %29, ptr %"$tmp0@100", align 8, !dbg !22
  %30 = call %Integer @integer_from_i64(i64 3), !dbg !23
  %"$tmp1@107" = alloca %Integer, align 8, !dbg !23
  store %Integer %30, ptr %"$tmp1@107", align 8, !dbg !23
  %31 = call %Integer @integer_from_i64(i64 2), !dbg !24
  %"$tmp2@111" = alloca %Integer, align 8, !dbg !24
  store %Integer %31, ptr %"$tmp2@111", align 8, !dbg !24
  %32 = load %Integer, ptr %"$tmp1@107", align 8, !dbg !23
  %33 = load %Integer, ptr %"$tmp2@111", align 8, !dbg !24
  %34 = call %Rational @integer_slash_integer(%Integer %32, %Integer %33), !dbg !24
  %"$tmp3@107" = alloca %Rational, align 8, !dbg !24
  store %Rational %34, ptr %"$tmp3@107", align 8, !dbg !24
  %35 = load %Rational, ptr %"$tmp0@100", align 8, !dbg !22
  %36 = load %Rational, ptr %"$tmp3@107", align 8, !dbg !23
  %37 = call %Rational @rational_slash_rational(%Rational %35, %Rational %36), !dbg !23
  %"$tmp4@100" = alloca %Rational, align 8, !dbg !23
  store %Rational %37, ptr %"$tmp4@100", align 8, !dbg !23
  %38 = load %Rational, ptr %"$tmp4@100", align 8, !dbg !22
  call void @"println <:Rational>"(%Rational %38), !dbg !22
  %39 = call %Rational @rational_from_c_string(ptr @11), !dbg !25
  %"$tmp0@122" = alloca %Rational, align 8, !dbg !25
  store %Rational %39, ptr %"$tmp0@122", align 8, !dbg !25
  %40 = call %Rational @rational_from_c_string(ptr @12), !dbg !26
  %"$tmp1@129" = alloca %Rational, align 8, !dbg !26
  store %Rational %40, ptr %"$tmp1@129", align 8, !dbg !26
  %41 = load %Rational, ptr %"$tmp0@122", align 8, !dbg !25
  %42 = load %Rational, ptr %"$tmp1@129", align 8, !dbg !26
  %43 = call i1 @rational_eq_rational(%Rational %41, %Rational %42), !dbg !26
  %"$tmp2@122" = alloca i1, align 1, !dbg !26
  store i1 %43, ptr %"$tmp2@122", align 1, !dbg !26
  %44 = load i1, ptr %"$tmp2@122", align 1, !dbg !25
  call void @"println <:Bool>"(i1 %44), !dbg !25
  %45 = call %Rational @rational_from_c_string(ptr @13), !dbg !27
  %"$tmp0@141" = alloca %Rational, align 8, !dbg !27
  store %Rational %45, ptr %"$tmp0@141", align 8, !dbg !27
  %46 = call %Rational @rational_from_c_string(ptr @14), !dbg !28
  %"$tmp1@148" = alloca %Rational, align 8, !dbg !28
  store %Rational %46, ptr %"$tmp1@148", align 8, !dbg !28
  %47 = load %Rational, ptr %"$tmp0@141", align 8, !dbg !27
  %48 = load %Rational, ptr %"$tmp1@148", align 8, !dbg !28
  %49 = call i1 @"<:Rational> != <:Rational>"(%Rational %47, %Rational %48), !dbg !28
  %"$tmp2@141" = alloca i1, align 1, !dbg !28
  store i1 %49, ptr %"$tmp2@141", align 1, !dbg !28
  %50 = load i1, ptr %"$tmp2@141", align 1, !dbg !27
  call void @"println <:Bool>"(i1 %50), !dbg !27
  %51 = call %Rational @rational_from_c_string(ptr @15), !dbg !29
  %"$tmp0@160" = alloca %Rational, align 8, !dbg !29
  store %Rational %51, ptr %"$tmp0@160", align 8, !dbg !29
  %52 = call %Rational @rational_from_c_string(ptr @16), !dbg !30
  %"$tmp1@166" = alloca %Rational, align 8, !dbg !30
  store %Rational %52, ptr %"$tmp1@166", align 8, !dbg !30
  %53 = load %Rational, ptr %"$tmp0@160", align 8, !dbg !29
  %54 = load %Rational, ptr %"$tmp1@166", align 8, !dbg !30
  %55 = call i1 @rational_less_rational(%Rational %53, %Rational %54), !dbg !30
  %"$tmp2@160" = alloca i1, align 1, !dbg !30
  store i1 %55, ptr %"$tmp2@160", align 1, !dbg !30
  %56 = load i1, ptr %"$tmp2@160", align 1, !dbg !29
  call void @"println <:Bool>"(i1 %56), !dbg !29
  %57 = call %Rational @rational_from_c_string(ptr @17), !dbg !31
  %"$tmp0@178" = alloca %Rational, align 8, !dbg !31
  store %Rational %57, ptr %"$tmp0@178", align 8, !dbg !31
  %58 = call %Rational @rational_from_c_string(ptr @18), !dbg !32
  %"$tmp1@184" = alloca %Rational, align 8, !dbg !32
  store %Rational %58, ptr %"$tmp1@184", align 8, !dbg !32
  %59 = load %Rational, ptr %"$tmp0@178", align 8, !dbg !31
  %60 = load %Rational, ptr %"$tmp1@184", align 8, !dbg !32
  %61 = call i1 @"<:Rational> > <:Rational>"(%Rational %59, %Rational %60), !dbg !32
  %"$tmp2@178" = alloca i1, align 1, !dbg !32
  store i1 %61, ptr %"$tmp2@178", align 1, !dbg !32
  %62 = load i1, ptr %"$tmp2@178", align 1, !dbg !31
  call void @"println <:Bool>"(i1 %62), !dbg !31
  %63 = call %Rational @rational_from_c_string(ptr @19), !dbg !33
  %"$tmp0@196" = alloca %Rational, align 8, !dbg !33
  store %Rational %63, ptr %"$tmp0@196", align 8, !dbg !33
  %64 = call %Rational @rational_from_c_string(ptr @20), !dbg !34
  %"$tmp1@203" = alloca %Rational, align 8, !dbg !34
  store %Rational %64, ptr %"$tmp1@203", align 8, !dbg !34
  %65 = load %Rational, ptr %"$tmp0@196", align 8, !dbg !33
  %66 = load %Rational, ptr %"$tmp1@203", align 8, !dbg !34
  %67 = call i1 @"<:Rational> <= <:Rational>"(%Rational %65, %Rational %66), !dbg !34
  %"$tmp2@196" = alloca i1, align 1, !dbg !34
  store i1 %67, ptr %"$tmp2@196", align 1, !dbg !34
  %68 = load i1, ptr %"$tmp2@196", align 1, !dbg !33
  call void @"println <:Bool>"(i1 %68), !dbg !33
  %69 = call %Rational @rational_from_c_string(ptr @21), !dbg !35
  %"$tmp0@216" = alloca %Rational, align 8, !dbg !35
  store %Rational %69, ptr %"$tmp0@216", align 8, !dbg !35
  %70 = call %Rational @rational_from_c_string(ptr @22), !dbg !36
  %"$tmp1@223" = alloca %Rational, align 8, !dbg !36
  store %Rational %70, ptr %"$tmp1@223", align 8, !dbg !36
  %71 = load %Rational, ptr %"$tmp0@216", align 8, !dbg !35
  %72 = load %Rational, ptr %"$tmp1@223", align 8, !dbg !36
  %73 = call i1 @"<:Rational> <= <:Rational>"(%Rational %71, %Rational %72), !dbg !36
  %"$tmp2@216" = alloca i1, align 1, !dbg !36
  store i1 %73, ptr %"$tmp2@216", align 1, !dbg !36
  %74 = load i1, ptr %"$tmp2@216", align 1, !dbg !35
  call void @"println <:Bool>"(i1 %74), !dbg !35
  %75 = call %Rational @rational_from_c_string(ptr @23), !dbg !37
  %"$tmp0@235" = alloca %Rational, align 8, !dbg !37
  store %Rational %75, ptr %"$tmp0@235", align 8, !dbg !37
  %76 = call %Rational @rational_from_c_string(ptr @24), !dbg !38
  %"$tmp1@242" = alloca %Rational, align 8, !dbg !38
  store %Rational %76, ptr %"$tmp1@242", align 8, !dbg !38
  %77 = load %Rational, ptr %"$tmp0@235", align 8, !dbg !37
  %78 = load %Rational, ptr %"$tmp1@242", align 8, !dbg !38
  %79 = call i1 @"<:Rational> >= <:Rational>"(%Rational %77, %Rational %78), !dbg !38
  %"$tmp2@235" = alloca i1, align 1, !dbg !38
  store i1 %79, ptr %"$tmp2@235", align 1, !dbg !38
  %80 = load i1, ptr %"$tmp2@235", align 1, !dbg !37
  call void @"println <:Bool>"(i1 %80), !dbg !37
  %81 = call %Rational @rational_from_c_string(ptr @25), !dbg !39
  %"$tmp0@254" = alloca %Rational, align 8, !dbg !39
  store %Rational %81, ptr %"$tmp0@254", align 8, !dbg !39
  %82 = call %Rational @rational_from_c_string(ptr @26), !dbg !40
  %"$tmp1@261" = alloca %Rational, align 8, !dbg !40
  store %Rational %82, ptr %"$tmp1@261", align 8, !dbg !40
  %83 = load %Rational, ptr %"$tmp0@254", align 8, !dbg !39
  %84 = load %Rational, ptr %"$tmp1@261", align 8, !dbg !40
  %85 = call i1 @"<:Rational> >= <:Rational>"(%Rational %83, %Rational %84), !dbg !40
  %"$tmp2@254" = alloca i1, align 1, !dbg !40
  store i1 %85, ptr %"$tmp2@254", align 1, !dbg !40
  %86 = load i1, ptr %"$tmp2@254", align 1, !dbg !39
  call void @"println <:Bool>"(i1 %86), !dbg !39
  br label %return, !dbg !10

return:                                           ; preds = %0
  ret void
}

declare %Rational @rational_from_c_string(ptr)

define private void @"println <:Rational>"(%Rational %0) !dbg !41 {
  %x = alloca %Rational, align 8
  store %Rational %0, ptr %x, align 8
  %2 = load %Rational, ptr %x, align 8, !dbg !42
  %3 = call %String @rational_as_string(%Rational %2), !dbg !42
  %"$tmp0@4557" = alloca %String, align 8, !dbg !42
  store %String %3, ptr %"$tmp0@4557", align 8, !dbg !42
  %4 = load %String, ptr %"$tmp0@4557", align 8, !dbg !42
  call void @"println <:String>"(%String %4), !dbg !42
  br label %return, !dbg !42

return:                                           ; preds = %1
  ret void
}

declare %String @rational_as_string(%Rational)

declare void @"println <:String>"(%String)

declare %Rational @"+ <:Rational>"(%Rational)

declare %Rational @minus_rational(%Rational)

declare %Rational @rational_plus_rational(%Rational, %Rational)

declare %Rational @"<:Rational> - <:Rational>"(%Rational, %Rational)

declare %Rational @rational_star_rational(%Rational, %Rational)

declare %Rational @integer_slash_integer(%Integer, %Integer)

declare %Rational @rational_slash_rational(%Rational, %Rational)

declare i1 @rational_eq_rational(%Rational, %Rational)

define private void @"println <:Bool>"(i1 %0) !dbg !43 {
  %x = alloca i1, align 1
  store i1 %0, ptr %x, align 1
  %2 = load %Rational, ptr %x, align 8, !dbg !44
  %3 = call %String @rational_as_string(%Rational %2), !dbg !44
  %"$tmp0@4557" = alloca %String, align 8, !dbg !44
  store %String %3, ptr %"$tmp0@4557", align 8, !dbg !44
  %4 = load %String, ptr %"$tmp0@4557", align 8, !dbg !44
  call void @"println <:String>"(%String %4), !dbg !44
  br label %return, !dbg !44

return:                                           ; preds = %1
  ret void
}

define i1 @"<:Rational> != <:Rational>"(%Rational %0, %Rational %1) !dbg !45 {
  %return_value = alloca i1, align 1
  %x = alloca %Rational, align 8
  store %Rational %0, ptr %x, align 8
  %y = alloca %Rational, align 8
  store %Rational %1, ptr %y, align 8
  %3 = load %Rational, ptr %x, align 8, !dbg !46
  %4 = load %Rational, ptr %y, align 8, !dbg !46
  %5 = call i1 @rational_eq_rational(%Rational %3, %Rational %4), !dbg !46
  %"$tmp0@4831" = alloca i1, align 1, !dbg !46
  store i1 %5, ptr %"$tmp0@4831", align 1, !dbg !46
  %6 = load i1, ptr %"$tmp0@4831", align 1, !dbg !46
  %7 = call i1 @"not <:Bool>"(i1 %6), !dbg !46
  %"$tmp1@4826" = alloca i1, align 1, !dbg !46
  store i1 %7, ptr %"$tmp1@4826", align 1, !dbg !46
  %8 = load i1, ptr %"$tmp1@4826", align 1, !dbg !46
  store i1 %8, ptr %return_value, align 1, !dbg !46
  br label %return, !dbg !46

return:                                           ; preds = %2
  %9 = load i1, ptr %return_value, align 1
  ret i1 %9
}

declare i1 @"not <:Bool>"(i1)

declare i1 @rational_less_rational(%Rational, %Rational)

define i1 @"<:Rational> > <:Rational>"(%Rational %0, %Rational %1) !dbg !47 {
  %return_value = alloca i1, align 1
  %x = alloca %Rational, align 8
  store %Rational %0, ptr %x, align 8
  %y = alloca %Rational, align 8
  store %Rational %1, ptr %y, align 8
  %3 = load %Integer, ptr %y, align 8, !dbg !48
  %4 = load %Integer, ptr %x, align 8, !dbg !48
  %5 = call i1 @integer_less_integer(%Integer %3, %Integer %4), !dbg !48
  %"$tmp0@5082" = alloca i1, align 1, !dbg !48
  store i1 %5, ptr %"$tmp0@5082", align 1, !dbg !48
  %6 = load i1, ptr %"$tmp0@5082", align 1, !dbg !48
  store i1 %6, ptr %return_value, align 1, !dbg !48
  br label %return, !dbg !48

return:                                           ; preds = %2
  %7 = load i1, ptr %return_value, align 1
  ret i1 %7
}

declare i1 @integer_less_integer(%Integer, %Integer)

define i1 @"<:Rational> <= <:Rational>"(%Rational %0, %Rational %1) !dbg !49 {
  %return_value = alloca i1, align 1
  %x = alloca %Rational, align 8
  store %Rational %0, ptr %x, align 8
  %y = alloca %Rational, align 8
  store %Rational %1, ptr %y, align 8
  %3 = load %Rational, ptr %x, align 8, !dbg !50
  %4 = load %Rational, ptr %y, align 8, !dbg !50
  %5 = call i1 @"<:Rational> > <:Rational>"(%Rational %3, %Rational %4), !dbg !50
  %"$tmp0@5123" = alloca i1, align 1, !dbg !50
  store i1 %5, ptr %"$tmp0@5123", align 1, !dbg !50
  %6 = load i1, ptr %"$tmp0@5123", align 1, !dbg !50
  %7 = call i1 @"not <:Bool>"(i1 %6), !dbg !50
  %"$tmp1@5118" = alloca i1, align 1, !dbg !50
  store i1 %7, ptr %"$tmp1@5118", align 1, !dbg !50
  %8 = load i1, ptr %"$tmp1@5118", align 1, !dbg !50
  store i1 %8, ptr %return_value, align 1, !dbg !50
  br label %return, !dbg !50

return:                                           ; preds = %2
  %9 = load i1, ptr %return_value, align 1
  ret i1 %9
}

define i1 @"<:Rational> >= <:Rational>"(%Rational %0, %Rational %1) !dbg !51 {
  %return_value = alloca i1, align 1
  %x = alloca %Rational, align 8
  store %Rational %0, ptr %x, align 8
  %y = alloca %Rational, align 8
  store %Rational %1, ptr %y, align 8
  %3 = load %Rational, ptr %x, align 8, !dbg !52
  %4 = load %Rational, ptr %y, align 8, !dbg !52
  %5 = call i1 @rational_less_rational(%Rational %3, %Rational %4), !dbg !52
  %"$tmp0@5165" = alloca i1, align 1, !dbg !52
  store i1 %5, ptr %"$tmp0@5165", align 1, !dbg !52
  %6 = load i1, ptr %"$tmp0@5165", align 1, !dbg !52
  %7 = call i1 @"not <:Bool>"(i1 %6), !dbg !52
  %"$tmp1@5160" = alloca i1, align 1, !dbg !52
  store i1 %7, ptr %"$tmp1@5160", align 1, !dbg !52
  %8 = load i1, ptr %"$tmp1@5160", align 1, !dbg !52
  store i1 %8, ptr %return_value, align 1, !dbg !52
  br label %return, !dbg !52

return:                                           ; preds = %2
  %9 = load i1, ptr %return_value, align 1
  ret i1 %9
}

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !2, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 14, column: 18, scope: !3)
!8 = !DILocation(line: 0, scope: !3)
!9 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!10 = !DILocation(line: 14, column: 18, scope: !9)
!11 = !DILocation(line: 0, column: 8, scope: !9)
!12 = !DILocation(line: 1, column: 9, scope: !9)
!13 = !DILocation(line: 1, column: 8, scope: !9)
!14 = !DILocation(line: 2, column: 9, scope: !9)
!15 = !DILocation(line: 2, column: 8, scope: !9)
!16 = !DILocation(line: 3, column: 8, scope: !9)
!17 = !DILocation(line: 3, column: 14, scope: !9)
!18 = !DILocation(line: 4, column: 8, scope: !9)
!19 = !DILocation(line: 4, column: 14, scope: !9)
!20 = !DILocation(line: 5, column: 8, scope: !9)
!21 = !DILocation(line: 5, column: 14, scope: !9)
!22 = !DILocation(line: 6, column: 8, scope: !9)
!23 = !DILocation(line: 6, column: 15, scope: !9)
!24 = !DILocation(line: 6, column: 19, scope: !9)
!25 = !DILocation(line: 7, column: 8, scope: !9)
!26 = !DILocation(line: 7, column: 15, scope: !9)
!27 = !DILocation(line: 8, column: 8, scope: !9)
!28 = !DILocation(line: 8, column: 15, scope: !9)
!29 = !DILocation(line: 9, column: 8, scope: !9)
!30 = !DILocation(line: 9, column: 14, scope: !9)
!31 = !DILocation(line: 10, column: 8, scope: !9)
!32 = !DILocation(line: 10, column: 14, scope: !9)
!33 = !DILocation(line: 11, column: 8, scope: !9)
!34 = !DILocation(line: 11, column: 15, scope: !9)
!35 = !DILocation(line: 12, column: 8, scope: !9)
!36 = !DILocation(line: 12, column: 15, scope: !9)
!37 = !DILocation(line: 13, column: 8, scope: !9)
!38 = !DILocation(line: 13, column: 15, scope: !9)
!39 = !DILocation(line: 14, column: 8, scope: !9)
!40 = !DILocation(line: 14, column: 15, scope: !9)
!41 = distinct !DISubprogram(name: "println <:Rational>", linkageName: "println <:Rational>", scope: !9, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!42 = !DILocation(line: 14, column: 18, scope: !41)
!43 = distinct !DISubprogram(name: "println <:Bool>", linkageName: "println <:Bool>", scope: !9, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!44 = !DILocation(line: 14, column: 18, scope: !43)
!45 = distinct !DISubprogram(name: "<:Rational> != <:Rational>", linkageName: "<:Rational> != <:Rational>", scope: !9, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!46 = !DILocation(line: 14, column: 18, scope: !45)
!47 = distinct !DISubprogram(name: "<:Rational> > <:Rational>", linkageName: "<:Rational> > <:Rational>", scope: !9, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!48 = !DILocation(line: 14, column: 18, scope: !47)
!49 = distinct !DISubprogram(name: "<:Rational> <= <:Rational>", linkageName: "<:Rational> <= <:Rational>", scope: !9, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!50 = !DILocation(line: 14, column: 18, scope: !49)
!51 = distinct !DISubprogram(name: "<:Rational> >= <:Rational>", linkageName: "<:Rational> >= <:Rational>", scope: !9, file: !2, line: 14, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!52 = !DILocation(line: 14, column: 18, scope: !51)
