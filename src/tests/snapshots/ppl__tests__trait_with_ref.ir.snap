---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%Integer = type { ptr }
%String = type { ptr }

@0 = private unnamed_addr constant [12 x i8] c"foo integer\00", align 1
@x = global %Integer zeroinitializer

define void @main.execute() !dbg !3 {
  call void @initialize(), !dbg !7
  call void @"bar <:Reference<Integer>>"(ptr @x), !dbg !8
  call void @destroy_integer(ptr @x), !dbg !9
  br label %return, !dbg !9

return:                                           ; preds = %0
  ret void
}

define void @"foo <:Reference<Integer>>"(ptr %0) !dbg !10 {
  %"$arg0" = alloca ptr, align 8
  store ptr %0, ptr %"$arg0", align 8
  %2 = call %String @string_from_c_string_and_length(ptr @0, i64 11), !dbg !11
  call void @"println <:String>"(%String %2), !dbg !11
  br label %return, !dbg !12

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @string_from_c_string_and_length(ptr, i64)

define private void @initialize() !dbg !13 {
  %1 = call %Integer @integer_from_i64(i64 0), !dbg !14
  store %Integer %1, ptr @x, align 8, !dbg !14
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

declare %Integer @integer_from_i64(i64)

define private void @"bar <:Reference<Integer>>"(ptr %0) !dbg !15 {
  %x = alloca ptr, align 8
  store ptr %0, ptr %x, align 8
  call void @"foo <:Reference<Integer>>"(ptr %x), !dbg !16
  br label %return, !dbg !16

return:                                           ; preds = %1
  ret void
}

declare void @destroy_integer(ptr)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 7, column: 8, scope: !3)
!8 = !DILocation(line: 8, column: 4, scope: !3)
!9 = !DILocation(line: 7, scope: !3)
!10 = distinct !DISubprogram(name: "foo <:Reference<Integer>>", linkageName: "foo <:Reference<Integer>>", scope: !3, file: !2, line: 3, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!11 = !DILocation(line: 3, column: 30, scope: !10)
!12 = !DILocation(line: 3, column: 22, scope: !10)
!13 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !3, file: !2, line: 7, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!14 = !DILocation(line: 7, column: 8, scope: !13)
!15 = distinct !DISubprogram(name: "bar <:Reference<Integer>>", linkageName: "bar <:Reference<Integer>>", scope: !3, file: !2, line: 5, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!16 = !DILocation(line: 5, column: 30, scope: !15)
