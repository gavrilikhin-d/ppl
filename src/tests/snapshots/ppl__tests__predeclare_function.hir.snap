---
source: src/tests/mod.rs
expression: hir
---
fn <x: Integer> plus two -> Integer:
	let $tmp0@32: Integer = clone (x:Integer)
	let $tmp1@34: Integer = 2
	let $tmp2@28: Integer = sum ($tmp0@32:Integer) ($tmp1@34:Integer)
	destroy ($tmp0@32:Integer)
	destroy ($tmp1@34:Integer)
	return ($tmp2@28:Integer)


fn sum <x: Integer> <y: Integer> -> Integer:
	let $tmp0@84: Integer = clone (x:Integer)
	let $tmp1@88: Integer = clone (y:Integer)
	let $tmp2@84: Integer = ($tmp0@84:Integer) + ($tmp1@88:Integer)
	destroy ($tmp0@84:Integer)
	destroy ($tmp1@88:Integer)
	return ($tmp2@84:Integer)

let $tmp0@100: Integer = 2
let $tmp1@100: Integer = ($tmp0@100:Integer) plus two
println ($tmp1@100:Integer)
destroy ($tmp0@100:Integer)
destroy ($tmp1@100:Integer)
