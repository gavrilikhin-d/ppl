---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%Integer = type { ptr }
%String = type { ptr }

@x = global %Integer zeroinitializer
@y = global ptr null

define void @main.execute() !dbg !3 {
  call void @initialize(), !dbg !7
  call void @initialize.1(), !dbg !8
  %1 = load ptr, ptr @y, align 8, !dbg !9
  %2 = call %Integer @clone_integer(ptr %1), !dbg !9
  call void @"println <:Integer>"(%Integer %2), !dbg !9
  %3 = load ptr, ptr @y, align 8, !dbg !10
  %4 = call %Integer @integer_from_i64(i64 2), !dbg !11
  store %Integer %4, ptr %3, align 8, !dbg !11
  %5 = load ptr, ptr @y, align 8, !dbg !12
  %6 = call %Integer @clone_integer(ptr %5), !dbg !12
  call void @"println <:Integer>"(%Integer %6), !dbg !12
  %7 = call %Integer @clone_integer(ptr @x), !dbg !13
  call void @"println <:Integer>"(%Integer %7), !dbg !13
  call void @destroy_integer(ptr @x), !dbg !14
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

define private void @initialize() !dbg !15 {
  %1 = call %Integer @integer_from_i64(i64 1), !dbg !16
  store %Integer %1, ptr @x, align 8, !dbg !16
  br label %return, !dbg !16

return:                                           ; preds = %0
  ret void
}

declare %Integer @integer_from_i64(i64)

define private void @initialize.1() !dbg !17 {
  %1 = call ptr @"reference to mutable <:ReferenceMut<Integer>>"(ptr @x), !dbg !18
  store ptr %1, ptr @y, align 8, !dbg !18
  br label %return, !dbg !18

return:                                           ; preds = %0
  ret void
}

define private ptr @"reference to mutable <:ReferenceMut<Integer>>"(ptr %0) !dbg !19 {
  %return_value = alloca ptr, align 8
  %ref = alloca ptr, align 8
  store ptr %0, ptr %ref, align 8
  %2 = load ptr, ptr %ref, align 8, !dbg !20
  %"$tmp@4774" = alloca ptr, align 8, !dbg !20
  store ptr %2, ptr %"$tmp@4774", align 8, !dbg !20
  %3 = load ptr, ptr %"$tmp@4774", align 8, !dbg !20
  store ptr %3, ptr %return_value, align 8, !dbg !20
  br label %return, !dbg !20

return:                                           ; preds = %1
  %4 = load ptr, ptr %return_value, align 8
  ret ptr %4
}

define private void @"println <:Integer>"(%Integer %0) !dbg !21 {
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  %2 = load %Integer, ptr %x, align 8, !dbg !22
  %3 = call %String @integer_as_string(%Integer %2), !dbg !22
  call void @"println <:String>"(%String %3), !dbg !22
  br label %return, !dbg !22

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @integer_as_string(%Integer)

declare %Integer @clone_integer(ptr)

declare void @destroy_integer(ptr)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 0, column: 12, scope: !3)
!8 = !DILocation(line: 1, column: 8, scope: !3)
!9 = !DILocation(line: 2, column: 8, scope: !3)
!10 = !DILocation(line: 3, scope: !3)
!11 = !DILocation(line: 3, column: 4, scope: !3)
!12 = !DILocation(line: 4, column: 8, scope: !3)
!13 = !DILocation(line: 5, column: 8, scope: !3)
!14 = !DILocation(line: 0, scope: !3)
!15 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !3, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!16 = !DILocation(line: 0, column: 12, scope: !15)
!17 = distinct !DISubprogram(name: "initialize.1", linkageName: "initialize.1", scope: !3, file: !2, line: 1, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!18 = !DILocation(line: 1, column: 29, scope: !17)
!19 = distinct !DISubprogram(name: "reference to mutable <:ReferenceMut<Integer>>", linkageName: "reference to mutable <:ReferenceMut<Integer>>", scope: !17, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!20 = !DILocation(line: 6, scope: !19)
!21 = distinct !DISubprogram(name: "println <:Integer>", linkageName: "println <:Integer>", scope: !3, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!22 = !DILocation(line: 6, scope: !21)
