---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%"Type<String>" = type { %String, %Integer }
%String = type { ptr }
%Integer = type { ptr }
%"Point<Integer>" = type { %Integer, %Integer }

@"Type<String>" = private global %"Type<String>" zeroinitializer
@0 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@p = global %"Point<Integer>" zeroinitializer
@x = global %Integer zeroinitializer

define private void @initialize() !dbg !3 {
  %1 = alloca %"Type<String>", align 8, !dbg !7
  %"Type<String>.name" = getelementptr inbounds %"Type<String>", ptr %1, i32 0, i32 0, !dbg !7
  %2 = call %String @string_from_c_string_and_length(ptr @0, i64 6), !dbg !8
  store %String %2, ptr %"Type<String>.name", align 8, !dbg !8
  %"Type<String>.size" = getelementptr inbounds %"Type<String>", ptr %1, i32 0, i32 1, !dbg !8
  %3 = call %Integer @integer_from_i64(i64 8), !dbg !8
  store %Integer %3, ptr %"Type<String>.size", align 8, !dbg !8
  %4 = load %"Type<String>", ptr %1, align 8, !dbg !8
  store %"Type<String>" %4, ptr @"Type<String>", align 8, !dbg !8
  br label %return, !dbg !8

return:                                           ; preds = %0
  ret void
}

declare %String @string_from_c_string_and_length(ptr, i64)

declare %Integer @integer_from_i64(i64)

define void @main.execute() !dbg !9 {
  call void @initialize(), !dbg !10
  call void @initialize.1(), !dbg !11
  call void @initialize.2(), !dbg !12
  %1 = load %Integer, ptr @x, align 8, !dbg !13
  %2 = call %Integer @integer_from_i64(i64 1), !dbg !14
  %3 = call i1 @integer_eq_integer(%Integer %1, %Integer %2), !dbg !14
  call void @"println <:Bool>"(i1 %3), !dbg !14
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

define private void @initialize.1() !dbg !15 {
  %1 = alloca %"Point<Integer>", align 8, !dbg !16
  %"Point<Integer>.x" = getelementptr inbounds %"Point<Integer>", ptr %1, i32 0, i32 0, !dbg !16
  %2 = call %Integer @integer_from_i64(i64 1), !dbg !17
  store %Integer %2, ptr %"Point<Integer>.x", align 8, !dbg !17
  %"Point<Integer>.y" = getelementptr inbounds %"Point<Integer>", ptr %1, i32 0, i32 1, !dbg !17
  %3 = call %Integer @integer_from_i64(i64 2), !dbg !18
  store %Integer %3, ptr %"Point<Integer>.y", align 8, !dbg !18
  %4 = load %"Point<Integer>", ptr %1, align 8, !dbg !18
  store %"Point<Integer>" %4, ptr @p, align 8, !dbg !18
  br label %return, !dbg !18

return:                                           ; preds = %0
  ret void
}

define private void @initialize.2() !dbg !19 {
  %1 = load %Integer, ptr @p, align 8, !dbg !20
  store %Integer %1, ptr @x, align 8, !dbg !20
  br label %return, !dbg !20

return:                                           ; preds = %0
  ret void
}

define private void @"println <:Bool>"(i1 %0) !dbg !21 {
  %x = alloca i1, align 1
  store i1 %0, ptr %x, align 1
  %2 = load i1, ptr %x, align 1, !dbg !22
  %3 = call %String @"String from <:Bool>"(i1 %2), !dbg !22
  call void @"println <:String>"(%String %3), !dbg !22
  br label %return, !dbg !22

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @"String from <:Bool>"(i1)

declare i1 @integer_eq_integer(%Integer, %Integer)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !2, file: !2, line: 5, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 5, column: 14, scope: !3)
!8 = !DILocation(line: 0, scope: !3)
!9 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!10 = !DILocation(line: 5, column: 14, scope: !9)
!11 = !DILocation(line: 3, column: 8, scope: !9)
!12 = !DILocation(line: 4, column: 8, scope: !9)
!13 = !DILocation(line: 5, column: 8, scope: !9)
!14 = !DILocation(line: 5, column: 13, scope: !9)
!15 = distinct !DISubprogram(name: "initialize.1", linkageName: "initialize.1", scope: !9, file: !2, line: 3, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!16 = !DILocation(line: 3, column: 8, scope: !15)
!17 = !DILocation(line: 3, column: 19, scope: !15)
!18 = !DILocation(line: 3, column: 25, scope: !15)
!19 = distinct !DISubprogram(name: "initialize.2", linkageName: "initialize.2", scope: !9, file: !2, line: 4, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!20 = !DILocation(line: 4, column: 8, scope: !19)
!21 = distinct !DISubprogram(name: "println <:Bool>", linkageName: "println <:Bool>", scope: !9, file: !2, line: 5, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!22 = !DILocation(line: 5, column: 14, scope: !21)
