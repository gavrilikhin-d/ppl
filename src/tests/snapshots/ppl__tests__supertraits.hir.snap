---
source: src/tests/mod.rs
expression: hir
---
trait Foo:
	fn foo <$arg0: Self> -> None

trait Bar:
	fn bar <$arg0: Self> -> None

trait FooBar:


fn foo <$arg0: None> -> None:
	let $tmp@99: None = `print <:String>`("foo")
	return ($tmp@99:None)


fn bar <$arg0: None> -> None:
	let $tmp@129: None = `println <:String>`("bar")
	return ($tmp@129:None)


fn<T: FooBar> foobar <x: T> -> None:
	`foo <:T>`((x:T))
	`bar <:T>`((x:T))

`foobar <:None>`(none)

==MONOMORPHIZED==


fn foo <$arg0: None> -> None:
	return `print <:String>`("foo")


fn bar <$arg0: None> -> None:
	return `println <:String>`("bar")


fn<None> foobar <x: None> -> None:
	`foo <:None>`((x:None))
	`bar <:None>`((x:None))
