---
source: src/tests/mod.rs
expression: hir
---
trait Foo:
	fn foo <:Self> -> None

trait Bar:
	fn bar <:Self> -> None

trait FooBar:


fn foo <:None> -> None:
	let $tmp0@105: String = "foo"
	let $tmp1@99: None = print ($tmp0@105:String)
destroy ($tmp0@105:String)
	return ($tmp1@99:None)


fn bar <:None> -> None:
	let $tmp0@137: String = "bar"
	let $tmp1@129: None = println ($tmp0@137:String)
destroy ($tmp0@137:String)
	return ($tmp1@129:None)


fn<T: FooBar> foobar <x: T> -> None:
	let $tmp0@168: None = foo (x:T)
$tmp0@168
	let $tmp0@175: None = bar (x:T)
$tmp0@175

let $tmp0@189: None = none
let $tmp1@182: None = foobar ($tmp0@189:None)
$tmp1@182
