---
source: src/tests/mod.rs
expression: hir
---
let $tmp0@12: Integer = 1
let mut x: Integer = ($tmp0@12:Integer)
let $tmp0@43: ReferenceMut<Integer> = (&x:ReferenceMut<Integer>)
let $tmp1@22: ReferenceMut<Integer> = reference to mutable ($tmp0@43:ReferenceMut<Integer>)
let y: ReferenceMut<Integer> = ($tmp1@22:ReferenceMut<Integer>)
let $tmp0@53: Integer = (*y:Integer)
let $tmp1@45: None = println ($tmp0@53:Integer)
$tmp1@45
let $tmp0@59: Integer = 2
(y:ReferenceMut<Integer>) = ($tmp0@59:Integer)
let $tmp0@69: Integer = (*y:Integer)
let $tmp1@61: None = println ($tmp0@69:Integer)
$tmp1@61
let $tmp0@79: Integer = clone (x:Integer)
let $tmp1@71: None = println ($tmp0@79:Integer)
$tmp1@71
destroy ($tmp0@12:Integer)
destroy (x:Integer)
destroy ($tmp0@53:Integer)
destroy ($tmp0@59:Integer)
destroy ($tmp0@69:Integer)
destroy ($tmp0@79:Integer)
