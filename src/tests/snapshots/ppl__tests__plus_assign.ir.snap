---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%"Type<String>" = type { %String, %Integer }
%String = type { ptr }
%Integer = type { ptr }
%Rational = type { ptr }

@"Type<String>" = private global %"Type<String>" zeroinitializer
@0 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@value = global %Rational zeroinitializer
@1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@str = global %String zeroinitializer
@2 = private unnamed_addr constant [6 x i8] c"Hello\00", align 1
@"$tmp0@28" = global %Rational zeroinitializer
@"$tmp0@34" = global ptr null
@"$tmp1@43" = global %Rational zeroinitializer
@3 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@"$tmp0@55" = global %Rational zeroinitializer
@"$tmp0@84" = global ptr null
@"$tmp1@91" = global %String zeroinitializer
@4 = private unnamed_addr constant [8 x i8] c" World!\00", align 1
@"$tmp0@109" = global %String zeroinitializer

define private void @initialize() !dbg !3 {
  %1 = alloca %"Type<String>", align 8, !dbg !7
  %"Type<String>.name" = getelementptr inbounds %"Type<String>", ptr %1, i32 0, i32 0, !dbg !7
  %2 = call %String @string_from_c_string_and_length(ptr @0, i64 6), !dbg !8
  store %String %2, ptr %"Type<String>.name", align 8, !dbg !8
  %"Type<String>.size" = getelementptr inbounds %"Type<String>", ptr %1, i32 0, i32 1, !dbg !8
  %3 = call %Integer @integer_from_i64(i64 8), !dbg !8
  store %Integer %3, ptr %"Type<String>.size", align 8, !dbg !8
  %4 = load %"Type<String>", ptr %1, align 8, !dbg !8
  store %"Type<String>" %4, ptr @"Type<String>", align 8, !dbg !8
  br label %return, !dbg !8

return:                                           ; preds = %0
  ret void
}

declare %String @string_from_c_string_and_length(ptr, i64)

declare %Integer @integer_from_i64(i64)

define private void @initialize.1() !dbg !9 {
  %1 = call %Rational @rational_from_c_string(ptr @1), !dbg !10
  store %Rational %1, ptr @value, align 8, !dbg !10
  br label %return, !dbg !10

return:                                           ; preds = %0
  ret void
}

declare %Rational @rational_from_c_string(ptr)

define private void @initialize.2() !dbg !11 {
  %1 = call %String @string_from_c_string_and_length(ptr @2, i64 5), !dbg !12
  store %String %1, ptr @str, align 8, !dbg !12
  br label %return, !dbg !12

return:                                           ; preds = %0
  ret void
}

define private void @initialize.3() !dbg !13 {
  %1 = load %Rational, ptr @value, align 8, !dbg !14
  %2 = call %Rational @clone_rational(%Rational %1), !dbg !14
  store %Rational %2, ptr @"$tmp0@28", align 8, !dbg !14
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

declare %Rational @clone_rational(%Rational)

define private void @initialize.4() !dbg !15 {
  store ptr @value, ptr @"$tmp0@34", align 8, !dbg !16
  br label %return, !dbg !16

return:                                           ; preds = %0
  ret void
}

define private void @initialize.5() !dbg !17 {
  %1 = call %Rational @rational_from_c_string(ptr @3), !dbg !18
  store %Rational %1, ptr @"$tmp1@43", align 8, !dbg !18
  br label %return, !dbg !18

return:                                           ; preds = %0
  ret void
}

define private void @initialize.6() !dbg !19 {
  %1 = load %Rational, ptr @value, align 8, !dbg !20
  %2 = call %Rational @clone_rational(%Rational %1), !dbg !20
  store %Rational %2, ptr @"$tmp0@55", align 8, !dbg !20
  br label %return, !dbg !20

return:                                           ; preds = %0
  ret void
}

define private void @initialize.7() !dbg !21 {
  store ptr @str, ptr @"$tmp0@84", align 8, !dbg !22
  br label %return, !dbg !22

return:                                           ; preds = %0
  ret void
}

define private void @initialize.8() !dbg !23 {
  %1 = call %String @string_from_c_string_and_length(ptr @4, i64 7), !dbg !24
  store %String %1, ptr @"$tmp1@91", align 8, !dbg !24
  br label %return, !dbg !24

return:                                           ; preds = %0
  ret void
}

define private void @initialize.9() !dbg !25 {
  %1 = load %String, ptr @str, align 8, !dbg !26
  %2 = call %String @clone_string(%String %1), !dbg !26
  store %String %2, ptr @"$tmp0@109", align 8, !dbg !26
  br label %return, !dbg !26

return:                                           ; preds = %0
  ret void
}

declare %String @clone_string(%String)

define void @main.execute() !dbg !27 {
init_globals:
  call void @initialize(), !dbg !28
  call void @initialize.1(), !dbg !29
  call void @initialize.2(), !dbg !30
  call void @initialize.3(), !dbg !31
  call void @initialize.4(), !dbg !32
  call void @initialize.5(), !dbg !33
  call void @initialize.6(), !dbg !34
  call void @initialize.7(), !dbg !35
  call void @initialize.8(), !dbg !36
  call void @initialize.9(), !dbg !37
  br label %0, !dbg !37

0:                                                ; preds = %init_globals
  %1 = load %Rational, ptr @value, align 8, !dbg !38
  call void @destroy_rational(%Rational %1), !dbg !38
  %2 = load %String, ptr @str, align 8, !dbg !39
  call void @destroy_string(%String %2), !dbg !39
  %3 = load %Rational, ptr @"$tmp0@28", align 8, !dbg !31
  call void @destroy_rational(%Rational %3), !dbg !31
  %4 = load %Rational, ptr @"$tmp1@43", align 8, !dbg !33
  call void @destroy_rational(%Rational %4), !dbg !33
  %5 = load %Rational, ptr @"$tmp0@55", align 8, !dbg !34
  call void @destroy_rational(%Rational %5), !dbg !34
  %6 = load %String, ptr @"$tmp1@91", align 8, !dbg !36
  call void @destroy_string(%String %6), !dbg !36
  %7 = load %String, ptr @"$tmp0@109", align 8, !dbg !37
  call void @destroy_string(%String %7), !dbg !37
  br label %return, !dbg !37

return:                                           ; preds = %0
  ret void
}

declare void @destroy_rational(%Rational)

declare void @destroy_string(%String)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !2, file: !2, line: 7, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 7, column: 11, scope: !3)
!8 = !DILocation(line: 0, scope: !3)
!9 = distinct !DISubprogram(name: "initialize.1", linkageName: "initialize.1", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!10 = !DILocation(line: 0, column: 16, scope: !9)
!11 = distinct !DISubprogram(name: "initialize.2", linkageName: "initialize.2", scope: !2, file: !2, line: 5, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!12 = !DILocation(line: 5, column: 14, scope: !11)
!13 = distinct !DISubprogram(name: "initialize.3", linkageName: "initialize.3", scope: !2, file: !2, line: 1, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!14 = !DILocation(line: 1, column: 8, scope: !13)
!15 = distinct !DISubprogram(name: "initialize.4", linkageName: "initialize.4", scope: !2, file: !2, line: 2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!16 = !DILocation(line: 2, scope: !15)
!17 = distinct !DISubprogram(name: "initialize.5", linkageName: "initialize.5", scope: !2, file: !2, line: 2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!18 = !DILocation(line: 2, column: 9, scope: !17)
!19 = distinct !DISubprogram(name: "initialize.6", linkageName: "initialize.6", scope: !2, file: !2, line: 3, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!20 = !DILocation(line: 3, column: 8, scope: !19)
!21 = distinct !DISubprogram(name: "initialize.7", linkageName: "initialize.7", scope: !2, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!22 = !DILocation(line: 6, scope: !21)
!23 = distinct !DISubprogram(name: "initialize.8", linkageName: "initialize.8", scope: !2, file: !2, line: 6, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!24 = !DILocation(line: 6, column: 7, scope: !23)
!25 = distinct !DISubprogram(name: "initialize.9", linkageName: "initialize.9", scope: !2, file: !2, line: 7, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!26 = !DILocation(line: 7, column: 8, scope: !25)
!27 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, line: 1, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!28 = !DILocation(line: 7, column: 11, scope: !27)
!29 = !DILocation(line: 0, column: 16, scope: !27)
!30 = !DILocation(line: 5, column: 14, scope: !27)
!31 = !DILocation(line: 1, column: 8, scope: !27)
!32 = !DILocation(line: 2, scope: !27)
!33 = !DILocation(line: 2, column: 9, scope: !27)
!34 = !DILocation(line: 3, column: 8, scope: !27)
!35 = !DILocation(line: 6, scope: !27)
!36 = !DILocation(line: 6, column: 7, scope: !27)
!37 = !DILocation(line: 7, column: 8, scope: !27)
!38 = !DILocation(line: 0, scope: !27)
!39 = !DILocation(line: 5, scope: !27)
