---
source: src/tests/mod.rs
expression: ir
---
; ModuleID = 'main'
source_filename = "src/main.ppl"

%Integer = type { ptr }
%String = type { ptr }

@"$tmp@39" = global %Integer zeroinitializer

define void @main.execute() !dbg !3 {
  call void @initialize(), !dbg !7
  call void @"foo <:Reference<Integer>>"(ptr @"$tmp@39"), !dbg !7
  call void @destroy_integer(ptr @"$tmp@39"), !dbg !7
  br label %return, !dbg !7

return:                                           ; preds = %0
  ret void
}

define void @"foo <:Reference<Integer>>"(ptr %0) !dbg !8 {
  %x = alloca ptr, align 8
  store ptr %0, ptr %x, align 8
  %2 = load ptr, ptr %x, align 8, !dbg !9
  %3 = call %Integer @clone_integer(ptr %2), !dbg !9
  call void @"println <:Integer>"(%Integer %3), !dbg !9
  br label %return, !dbg !10

return:                                           ; preds = %1
  ret void
}

define private void @"println <:Integer>"(%Integer %0) !dbg !11 {
  %x = alloca %Integer, align 8
  store %Integer %0, ptr %x, align 8
  %2 = load %Integer, ptr %x, align 8, !dbg !12
  %3 = call %String @integer_as_string(%Integer %2), !dbg !12
  call void @"println <:String>"(%String %3), !dbg !12
  br label %return, !dbg !12

return:                                           ; preds = %1
  ret void
}

declare void @"println <:String>"(%String)

declare %String @integer_as_string(%Integer)

declare %Integer @clone_integer(ptr)

define private void @initialize() !dbg !13 {
  %1 = call %Integer @integer_from_i64(i64 42), !dbg !14
  store %Integer %1, ptr @"$tmp@39", align 8, !dbg !14
  br label %return, !dbg !14

return:                                           ; preds = %0
  ret void
}

declare %Integer @integer_from_i64(i64)

declare void @destroy_integer(ptr)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "src/main.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "main.execute", linkageName: "main.execute", scope: !2, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 2, column: 4, scope: !3)
!8 = distinct !DISubprogram(name: "foo <:Reference<Integer>>", linkageName: "foo <:Reference<Integer>>", scope: !3, file: !2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!9 = !DILocation(line: 0, column: 32, scope: !8)
!10 = !DILocation(line: 0, column: 24, scope: !8)
!11 = distinct !DISubprogram(name: "println <:Integer>", linkageName: "println <:Integer>", scope: !8, file: !2, line: 2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!12 = !DILocation(line: 2, column: 6, scope: !11)
!13 = distinct !DISubprogram(name: "initialize", linkageName: "initialize", scope: !3, file: !2, line: 2, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!14 = !DILocation(line: 2, column: 4, scope: !13)
