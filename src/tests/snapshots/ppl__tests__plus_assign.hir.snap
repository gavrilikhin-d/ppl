---
source: src/tests/mod.rs
expression: hir
---
let $tmp0@16: Rational = 0.0
let mut value: Rational = ($tmp0@16:Rational)
let $tmp0@76: String = "Hello"
let mut str: String = ($tmp0@76:String)
let $tmp0@28: Rational = clone (value:Rational)
let $tmp1@20: None = println ($tmp0@28:Rational)
$tmp1@20
let $tmp0@34: ReferenceMut<Rational> = (&value:ReferenceMut<Rational>)
let $tmp1@43: Rational = 1.0
let $tmp2@34: None = ($tmp0@34:ReferenceMut<Rational>) += ($tmp1@43:Rational)
$tmp2@34
let $tmp0@55: Rational = clone (value:Rational)
let $tmp1@47: None = println ($tmp0@55:Rational)
$tmp1@47
let $tmp0@84: ReferenceMut<String> = (&str:ReferenceMut<String>)
let $tmp1@91: String = " World!"
let $tmp2@84: None = ($tmp0@84:ReferenceMut<String>) += ($tmp1@91:String)
$tmp2@84
let $tmp0@109: String = clone (str:String)
let $tmp1@101: None = println ($tmp0@109:String)
$tmp1@101
destroy ($tmp0@16:Rational)
destroy (value:Rational)
destroy ($tmp0@76:String)
destroy (str:String)
destroy ($tmp0@28:Rational)
destroy ($tmp1@43:Rational)
destroy ($tmp0@55:Rational)
destroy ($tmp1@91:String)
destroy ($tmp0@109:String)
