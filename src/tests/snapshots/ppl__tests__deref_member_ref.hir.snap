---
source: src/tests/mod.rs
expression: hir
---
type Point:
	x: Integer
	y: Integer


fn x of <p: Reference<Point>> -> Integer:
	let $tmp@61: Integer = `clone <:Reference<Integer>>`((*p:Point).x)
	return ($tmp@61:Integer)

let $tmp@80: Point = Point { x: 1, y: 2 }
`println <:Integer>`(`x of <:Reference<Point>>`((&$tmp@80:Reference<Point>)))

==MONOMORPHIZED==


@mangle_as("integer_as_string")
fn String from <$arg0: Integer> -> String

fn println <x: Integer> -> None:
	let $tmp@176: None = `println <:String>`(`String from <:Integer>`((copy x:Integer)))
	return ($tmp@176:None)
