---
source: src/tests/mod.rs
expression: hir
---
let x: Integer = 1

fn get x -> Integer:
	let $tmp@22: Integer = `clone <:Reference<Integer>>`((x:Integer))
	return ($tmp@22:Integer)

let y: Integer = `get x`()

fn get y -> Integer:
	let $tmp@51: Integer = `clone <:Reference<Integer>>`((y:Integer))
	return ($tmp@51:Integer)

`println <:Integer>`(`clone <:Reference<Integer>>`((y:Integer)))
`destroy <:ReferenceMut<Integer>>`((x:Integer))
`destroy <:ReferenceMut<Integer>>`((y:Integer))

==MONOMORPHIZED==


@mangle_as("integer_as_string")
fn String from <$arg0: Integer> -> String

fn println <x: Integer> -> None:
	let $tmp@176: None = `println <:String>`(`String from <:Integer>`((copy x:Integer)))
	return ($tmp@176:None)
