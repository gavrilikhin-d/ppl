---
source: src/syntax/tests/mod.rs
expression: ir
---
; ModuleID = 'consume_greater'
source_filename = "consume_greater.ppl"

%"Point<Integer>" = type { %Integer }
%Integer = type { ptr }

define void @consume_greater.execute() !dbg !3 {
  %1 = alloca %"Point<Integer>", align 8, !dbg !7
  %"Point<Integer>.x" = getelementptr inbounds %"Point<Integer>", ptr %1, i32 0, i32 0, !dbg !7
  %2 = call %Integer @integer_from_i64(i64 1), !dbg !8
  store %Integer %2, ptr %"Point<Integer>.x", align 8, !dbg !8
  %3 = load %"Point<Integer>", ptr %1, align 8, !dbg !8
  br label %return, !dbg !8

return:                                           ; preds = %0
  ret void
}

declare %Integer @integer_from_i64(i64)

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "ppl", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, sysroot: "/")
!2 = !DIFile(filename: "consume_greater.ppl", directory: ".")
!3 = distinct !DISubprogram(name: "consume_greater.execute", linkageName: "consume_greater.execute", scope: !2, file: !2, line: 3, type: !4, spFlags: DISPFlagDefinition, unit: !1)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!7 = !DILocation(line: 3, scope: !3)
!8 = !DILocation(line: 3, column: 20, scope: !3)
